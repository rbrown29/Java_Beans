#BlueJ class context
comment0.target=AppStore
comment0.text=\n\ An\ app\ store\ containing\ apps\n\n\ Modifications\:\n\ Create\ AppStore\ with\ a\ list\ of\ apps\ and\ basic\ methods\ to\ add,\ clear,\ and\ print\ apps\n\ Created\ Methods\ getAppByName,\ removeApp,\ getAppByAuthor,\ \n\ \ \ \ \ \ getNumAppsWithRating,\ getMaxRatingOfAnApp,\ \n\ \ \ \ \ \ and\ printAppStoreSummaryStats.\ added\ items\ to\ list.\ \n\n\ @author\ Richard\ Brown\n\ @version\ 8/7/2019\n
comment1.params=name
comment1.target=AppStore(java.lang.String)
comment1.text=\n\ Create\ an\ app\ store\ with\ the\ given\ name\n\ @param\ name\ the\ name\ of\ this\ app\ store\n
comment10.params=author
comment10.target=java.util.ArrayList\ getAppsByAuthor(java.lang.String)
comment10.text=\n\ Get\ app\ by\ author\n\ @param\ String\ author\n\ Creates\ an\ empty\ list\n\ Loops\ through\ the\ current\ list\ and\ searches\ for\ apps\ with\ the\ given\n\ author\ name.\ If\ the\ search\ is\ successful,\ it\ adds\ the\ app\ to\ the\ empty\n\ list\ and\ returns\ the\ list.\n\ Otherwise\ returns\ empty\ list.\n
comment11.params=rating
comment11.target=int\ getNumAppsWithRating(int)
comment11.text=\n\ Get\ the\ number\ of\ app\ for\ a\ givin\ rating.\n\ @param\ int\ rating\n\ Loops\ through\ the\ appList\ if\ that\ rating\ is\ found\ then\ adds\ to\ \n\ the\ counter.\n\ returns\ count\n
comment12.params=
comment12.target=int\ getMaxRatingOfAnApp()
comment12.text=\n\ Get\ max\ rating\ of\ apps\n\ @param\ int\ max,three,two,\ one\n\ Gets\ all\ apps\ that\ are\ rated.\ Uses\ a\ controlled\ if\ statement\ to\ find\n\ the\ max\ rating.\ \n
comment13.params=
comment13.target=void\ printAppStoreSummaryStats()
comment13.text=\n\ Print\ app\ store\ stats\n\ Prints\ store\ name,\ list\ size,\ how\ many\ apps\ are\ rated\ 1\ -4.\n\ Loops\ through\ \ the\ list\ with\ a\ counter\ to\ find\ the\ number\ of\ apps\n\ without\ a\ rating\ then\ prints\ it.\n\ Prints\ the\ max\ rating\n
comment2.params=
comment2.target=void\ populateApps()
comment2.text=\n\ Populate\ the\ store\ with\ a\ few\ apps.\n\ Use\ this\ method\ to\ make\ testing\ easier.\ After\ creating\ an\ AppStore,\n\ call\ this\ method\ to\ populate\ the\ apps,\ and\ then\ test\ your\ methods.\n
comment3.params=anApp
comment3.target=void\ addApp(App)
comment3.text=\n\ Add\ the\ given\ app\ to\ the\ app\ store\n\ @param\ anApp\ an\ app\ to\ add\n
comment4.params=name\ author\ price
comment4.target=void\ addApp(java.lang.String,\ java.lang.String,\ double)
comment4.text=\n\ Create\ an\ app\ with\ the\ given\ name,\ author,\ and\ price\ and\ add\ it\ to\ the\ store.\n\ The\ app\ starts\ out\ unrated.\n\ @param\ name\ name\ of\ the\ app\n\ @param\ author\ the\ app\ author\n\ @param\ price\ the\ price\ of\ the\ app\n
comment5.params=
comment5.target=int\ getNumberOfApps()
comment5.text=\n\ @return\ the\ number\ of\ apps\ in\ the\ store\n
comment6.params=
comment6.target=void\ clearAppStore()
comment6.text=\n\ Removes\ all\ the\ apps\ from\ the\ store\n
comment7.params=
comment7.target=void\ printAppList()
comment7.text=\n\ Print\ all\ the\ apps\ in\ the\ store\n
comment8.params=name
comment8.target=App\ findApp(java.lang.String)
comment8.text=\n\ Find\ an\ app\ based\ on\ its\ name\n\ @param\ name\ use\ the\ given\ name\ search\ for\n\ @return\ the\ app\ with\ the\ given\ name\n\ \ \ \ \ \ \ \ \ or\ null\ if\ there\ is\ no\ app\ with\ that\ name\n
comment9.params=name
comment9.target=void\ removeApp(java.lang.String)
comment9.text=\n\ Remove\ app\n\ @param\ name\ finds\ app\ name\ and\ removes\ it\ from\ the\ appList.\n
numComments=14
